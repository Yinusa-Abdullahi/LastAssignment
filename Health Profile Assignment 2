using System;

public class HealthProfile
{
   public string firstName;
   public string lastName;
   public string _patientGender;
   private int _patientYearOfBirth;
   private int day;
   private string month;
   public int height;
   public int weight;
   public int _currentYear;
   
   public HealthProfile (string fname, string lname, string gender, int dayofbirth, string monthofbirth, int yearofbirth, int height, int weight, int cy ) 
   {
       firstName = fname;
       lastName = lname;
       _patientYearOfBirth = yearofbirth;
       _patientGender = gender;
       height = height;
       weight = weight;
       _currentYear = cy;
       
       
   }
   
   public string FirstName {get; set;}
   public string LastName {get; set;}
   public int Currentyear {get; set;}
   public string Month {get; set;}
   public int Height {get; set;}
   public int Weight {get; set;}
   
   private int Day 
   {
       get {return day;}
       set
       {
           if (value > 0 && value < 31)
           day = value;
           else
           {
                Console.WriteLine ("Enter a valid day");
                value = Convert.ToInt32 (Console.ReadLine());
                
           }
       }
       }
   
  private int PatientYear
   {
       get 
       { return _patientYearOfBirth; }
        
  set 
  {
      
     while (value < 1000 || value > 2021  )
     {
     Console.WriteLine ("Invalid year of birth, please enter another number");
     value = Convert.ToInt32 (Console.ReadLine());
     }
     
     
     _patientYearOfBirth = value;
     }
      }
      
      public string Gender 
      {
          get
        {return _patientGender;}
        set 
        {
            while (value.ToUpper() != "M" && value.ToUpper() != "F")
            {
                Console.WriteLine ("Please enter a valid gender (M or F)");
                Console.ReadLine();
                
            }
            _patientGender = value;
        }
        }
        //calculate age
        public int Age ()
        {
        get; {return _currentYear - _patientYearOfBirth;
        }
        }
        //Maximum heart rate
        public int MaximumHeartRate ()
        {
       
           return 220 - Age; 
           
        }    
 //Target Rate
public int MaximumTargetRate ()
{
  
        return (Convert.ToInt32(MaximumHeartRate())) * 0.5;
}
// calculate BMI
public double BMI ()
{
    return weight * 703 / height * height;
}

//BMI Categorization

public int BMICategorization()
{
    if (BMI() < 18.5)
    return "Underweight";
    else if (BMI() < 25.5)
    return "Normal";
    
    else if (BMI() < 30)
    return "Overweight";
    else
    return "Obsese";
    
}

public static void Main ()
{
    HealthProfile profile = New HealthProfile ("Yinusa", "Abdullahi", "M", 09, "November", 1999, 20, 10, 2021);
    
    Console.WriteLine ("The patient Age is {0}", profile.Age());
    
    Console.WriteLine ("The patient's BMI is {0}", profile.BMI());
    
    Console.WriteLine ("The patient's Maximum Heart Rate is {0}", profile.MaximumHeartRate());
    Console.WriteLine ("The patient's target-heart-rate-range is {0}", profile.MaximumTargetRate());
}

}

